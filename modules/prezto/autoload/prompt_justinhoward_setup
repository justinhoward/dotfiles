#
# A simple theme that displays relevant, contextual information.
# Based on the sorin theme and powerline
#
# Authors:
#   Justin Howard <jmhoward0@gmail.com>


# Load dependencies.
pmodload 'helper'

zstyle ':prezto:module:prompt:justinhoward:symbols' separator_l "\ue0b0"
zstyle ':prezto:module:prompt:justinhoward:symbols' separator_r "\ue0b2"
zstyle ':prezto:module:prompt:justinhoward:symbols' job "\u2699"
zstyle ':prezto:module:prompt:justinhoward:symbols' root "\u26a1"
zstyle ':prezto:module:prompt:justinhoward:symbols' error "\u2718"

# Characters
# SEGMENT_SEPARATOR="\ue0b0"
# PLUSMINUS="\u00b1"
# BRANCH="\ue0a0"
# DETACHED="\u27a6"
# CROSS="\u2718"
# LIGHTNING="\u26a1"
# GEAR="\u2699"

function prompt_justinhoward_status {
    local symbols job_symbol root_symbol return_code

    zstyle -s ':prezto:module:prompt:justinhoward:symbols' job job_symbol
    zstyle -s ':prezto:module:prompt:justinhoward:symbols' root job_symbol
    zstyle -s ':prezto:module:prompt:justinhoward:symbols' error error_symbol
    zstyle -s ':prezto:module:prompt:justinhoward' return_code return_code

    symbols=()
    [[ "$return_code" -ne 0 ]] && symbols+="%F{red}$error_symbol"
    [[ $UID -eq 0 ]] && symbols+="%F{yellow}$root_symbol"
    [[ "$(jobs -l | wc -l)" -gt 0 ]] && symbols+="%F{cyan}$job_symbol"

    echo -n "$symbols"
}

prompt_justinhoward_context() {
    local user default_user default_hostname
    zstyle -s ':prezto:module:prompt:justinhoward' default_user default_user
    zstyle -s ':prezto:module:prompt:justinhoward' default_hostname default_hostname

    if [[ "$USER" != "$default_user" || -n "$SSH_CONNECTION" ]]; then
        echo -n "%(!.%F{yellow}.)%7>…>%n%<<"
    fi

    if [[ "$(hostname)" != "$default_hostname" ]]; then
        echo -n "@%7>…>%m%<<"
    fi
}

function prompt_justinhoward_pwd {
    local pwd="${PWD/#$HOME/~}"
    local prompt_pwd

    if [[ "$pwd" == (#m)[/~] ]]; then
        prompt_pwd="$MATCH"
        unset MATCH
    else
        prompt_pwd="${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}/${pwd:t}"
    fi

    echo -n $prompt_pwd
}

function prompt_justinhoward_git_prompt {
    echo -n "${git_info:+${(e)git_info[prompt]}}"
}

function prompt_justinhoward_git_color {
    local bg
    if [[ -n "${git_info:+${(e)git_info[clean]}}" ]]; then
        bg=green
    elif [[ -n "${git_info:+${(e)git_info[action]}}" ]]; then
        bg=magenta
    elif [[ -n "${git_info:+${(e)git_info[position]}}" ]]; then
        bg=cyan
    else
        bg=yellow
    fi

    echo -n $bg
}

function prompt_justinhoward_git_status {
    echo -n "${git_info[rprompt]}"
}

function prompt_justinhoward_compile_l {
    _prompt_justinhoward_bg=

    local status_symbols="$(prompt_justinhoward_status)"
    local context="$(prompt_justinhoward_context)"
    local git_prompt="$(prompt_justinhoward_git_prompt)"

    if [[ -n "$status_symbols" ]]; then
        prompt_justinhoward_segment_l "$status_symbols" black blue
    fi

    if [[ -n "$context" ]]; then
        prompt_justinhoward_segment_l "$context" black default
    fi
    prompt_justinhoward_segment_l "$(prompt_justinhoward_pwd)" blue black

    if [[ -n "$_prompt_justinhoward_git_enabled" ]] && [[ -n "$git_prompt" ]]; then
        prompt_justinhoward_segment_l "$git_prompt" "$(prompt_justinhoward_git_color)" black
    fi

    prompt_justinhoward_end_l
}

function prompt_justinhoward_compile_r {
    _prompt_justinhoward_bg=

    local git_status="$(prompt_justinhoward_git_status)"

    if [[ -n "$_prompt_justinhoward_git_enabled" ]] && [[ -n "$git_status" ]]; then
        prompt_justinhoward_segment_r "$git_status" black blue
    fi

    prompt_justinhoward_end_r
}

function prompt_justinhoward_segment_l {
    local text=$1 bg=$2 fg=$3 separator
    zstyle -s ':prezto:module:prompt:justinhoward:symbols' separator_l separator

    if [[ -n "$_prompt_justinhoward_bg" ]] && [[ "$_prompt_justinhoward_bg" != "$bg" ]]; then
        echo -n " %F{$_prompt_justinhoward_bg}%K{$bg}$separator"
    fi

    echo -n "%K{$bg}%F{$fg} $text"
    _prompt_justinhoward_bg=$bg
}

function prompt_justinhoward_end_l {
    zstyle -s ':prezto:module:prompt:justinhoward:symbols' separator_l separator

    echo -n " %F{$_prompt_justinhoward_bg}%k$separator%f"
}

function prompt_justinhoward_segment_r {
    local text=$1 bg=$2 fg=$3 separator
    zstyle -s ':prezto:module:prompt:justinhoward:symbols' separator_r separator

    if [[ -z "$_prompt_justinhoward_bg" ]]; then
        echo -n "%F{$bg}$separator"
    elif [[ "$_prompt_justinhoward_bg" != $bg ]]; then
        echo -n " %F{$bg}%K{$_prompt_justinhoward_bg}$separator"
    fi

    echo -n "%K{$bg}%F{$fg} $text"
    _prompt_justinhoward_bg=$bg
}

function prompt_justinhoward_end_r {
    echo -n " %f%k"
}

function prompt_justinhoward_precmd {
    local disable_git
    zstyle -s ':prezto:module:prompt:justinhoward' disable_git disable_git
    zstyle ':prezto:module:prompt:justinhoward' return_code "$?"

    setopt LOCAL_OPTIONS
    unsetopt XTRACE KSH_ARRAYS

    # Get Git repository information.
    if (( $+functions[git-info] )); then
        if git-info && [[ -z "$disable_git" ]]; then
            _prompt_justinhoward_git_enabled=1
        else
            _prompt_justinhoward_git_enabled=
        fi
    fi

    _prompt_justinhoward_l="$(prompt_justinhoward_compile_l)"
    _prompt_justinhoward_r="$(prompt_justinhoward_compile_r)"
}

function prompt_justinhoward_setup {
    setopt LOCAL_OPTIONS
    unsetopt XTRACE KSH_ARRAYS
    prompt_opts=(cr percent subst)

    # Load required functions.
    autoload -Uz add-zsh-hook

    # Add hook for calling git-info before each command.
    add-zsh-hook precmd prompt_justinhoward_precmd

    # Set editor-info parameters.
    zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
    zstyle ':prezto:module:editor:info:keymap:primary' format ' '
    zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f '
    zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}❯%f%b'

    # Set git-info parameters.
    zstyle ':prezto:module:git:info' verbose 'yes'
    zstyle ':prezto:module:git:info:action' format ' %F{yellow}%s%f'
    zstyle ':prezto:module:git:info:added' format '%F{green}✚%f'
    zstyle ':prezto:module:git:info:ahead' format '%F{yellow}⬆%f'
    zstyle ':prezto:module:git:info:behind' format '%F{yellow}⬇%f'
    zstyle ':prezto:module:git:info:branch' format '%b'
    zstyle ':prezto:module:git:info:clean' format 'clean'
    zstyle ':prezto:module:git:info:commit' format '%F{green}%.7c%f'
    zstyle ':prezto:module:git:info:deleted' format '%F{red}✖%f'
    zstyle ':prezto:module:git:info:modified' format '%F{blue}✱%f'
    zstyle ':prezto:module:git:info:position' format '%F{red}%p%f'
    zstyle ':prezto:module:git:info:renamed' format '%F{magenta}➜%f'
    zstyle ':prezto:module:git:info:stashed' format '%F{cyan}✭%f'
    zstyle ':prezto:module:git:info:unmerged' format '%F{yellow}═%f'
    zstyle ':prezto:module:git:info:untracked' format '%F{white}◼%f'
    zstyle ':prezto:module:git:info:keys' format \
    'prompt' '$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u' \
    'clean' '%C' \
    'action' '%s' \
    'position' '%p'

    # Define prompts.
    # PROMPT='%F{cyan}${_prompt_justinhoward_pwd}%f${git_info:+${(e)git_info[prompt]}}%(!. %B%F{red}#%f%b.)${editor_info[keymap]} '
    PROMPT='${_prompt_justinhoward_l}${editor_info[keymap]}'
    # RPROMPT='${editor_info[overwrite]}${VIM:+" %B%F{green}V%f%b"}${git_info[rprompt]}'
    RPROMPT='${editor_info[overwrite]}${_prompt_justinhoward_r}'
    SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_justinhoward_setup "$@"

